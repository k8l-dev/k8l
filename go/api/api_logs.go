/*
 * k8l
 *
 * Kubernetes light logs API
 *
 * API version: 1.0
 * Contact: mogui83@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"net/http"
	"strconv"

	"github.com/gin-gonic/gin"
	log "github.com/sirupsen/logrus"
	p "mogui.it/k8l/go/persistence"
)

// GetNamespaceLogs - Logs for a namespace
func GetNamespaceLogs(c *gin.Context) {

	c.JSON(http.StatusOK, gin.H{})
}

// GetResourceLogs - Logs for a container
func GetResourceLogs(c *gin.Context) {
	repository := p.STORAGE.LogRepository
	logs := repository.GetLogs(c.Param("namespace"), c.Param("container"))
	mapped := mapModelToDTO(logs)
	// log.Debug(c.Request.URL.Query())
	// jsonString, _ := json.Marshal(c.Request.URL.Query())
	// log.Debug(string(jsonString))
	// log.Debug(c.Request.URL.Query().Get("order[0][column]"))
	draw, err := strconv.Atoi(c.DefaultQuery("draw", "1"))
	if err != nil {
		draw = 1
	}
	ret := gin.H{
		"draw":            draw,
		"recordsTotal":    int32(len(mapped)),
		"recordsFiltered": int32(len(mapped)),
		"data":            mapped,
	}
	log.Debug(ret)
	c.JSON(http.StatusOK, ret)
}
