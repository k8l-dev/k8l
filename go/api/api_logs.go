/*
 * k8l
 *
 * Kubernetes light logs API
 *
 * API version: 1.0
 * Contact: mogui83@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"net/http"
	"strconv"

	"github.com/gin-gonic/gin"
	p "mogui.it/k8l/go/persistence"
)

// GetNamespaceLogs - Logs for a namespace
func GetNamespaceLogs(c *gin.Context) {

	c.JSON(http.StatusOK, gin.H{})
}

// GetResourceLogs - Logs for a container
func GetResourceLogs(c *gin.Context) {
	repository := p.STORAGE.LogRepository
	start := c.DefaultQuery("start", "0")
	length := c.DefaultQuery("length", "10")
	var orderColumn int

	orderColumn, err := strconv.Atoi(c.DefaultQuery("order[0][column]", "0"))
	if err != nil {
		c.JSON(http.StatusBadRequest, gin.H{
			"error": err,
		})
		return
	}

	orderDir := c.DefaultQuery("order[0][dir]", "desc")
	columns := []string{"timestamp", "container_name", "message"}

	match := c.Query("search[value]")

	count, logs := repository.GetLogs(c.Param("namespace"),
		c.Param("container"), start, length, columns[orderColumn], orderDir, match)
	mapped := mapModelToDTO(logs)
	// log.Debug(c.Request.URL.Query())
	// jsonString, _ := json.Marshal(c.Request.URL.Query())
	// log.Debug(string(jsonString))
	// log.Debug(c.Request.URL.Query().Get("order[0][column]"))
	draw, err := strconv.Atoi(c.DefaultQuery("draw", "1"))
	if err != nil {
		draw = 1
	}
	ret := gin.H{
		"draw":            draw,
		"recordsTotal":    int32(len(mapped)),
		"recordsFiltered": count,
		"data":            mapped,
	}

	c.JSON(http.StatusOK, ret)
}
